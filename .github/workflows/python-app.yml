# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application CI/CD Pipeline

on:
  push:
    branches: [ "main"]
  pull_request:
    branches: [ "main" ]

# permissions:
#   contents: read

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit
          pre-commit install
          pip install -r requirements.txt

      - name: Run pre-commit
        run: pre-commit run --all-files

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel
        pip install -r requirements.txt
    
    # - name: Install pre-commit
    #   run: pip install pre-commit

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV

    - name: Run Tests
      env:
        PYTHONPATH: src
      run: |
        pytest tests/ --junitxml=reports/test-results.xml

    - name: Build and package
      env:
        PYTHONPATH: src
      run: |
        python setup.py sdist bdist_wheel

    - name: Upload package
      uses: actions/upload-artifact@v3
      with:
          name: pyspark_sales_data_project
          path: dist/

    
